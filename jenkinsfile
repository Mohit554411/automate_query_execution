pipeline {
    agent any

    environment {
        LOG_FILE = "logs/execution.log"
    }

    stages {
        stage('Check New Queries') {
            steps {
                script {
                    def newQueries = sh(script: "git diff --name-only origin/master HEAD | grep '^queries/.*\\.js$'", returnStdout: true).trim()
                    
                    if (newQueries == "") {
                        echo "No new queries found."
                        currentBuild.result = 'SUCCESS'
                        error "No new queries found."
                    } else {
                        echo "New Queries Found: ${newQueries}"
                        writeFile(file: 'new_queries.txt', text: newQueries)
                    }
                }
            }
        }

        stage('Validate Query') {
            steps {
                script {
                    def validationResult = sh(script: "node validate_query.js new_queries.txt", returnStatus: true)
                    if (validationResult != 0) {
                        error "❌ Query validation failed!"
                    }
                }
            }
        }

        stage('Execute Query') {
            steps {
                script {
                    def executionResult = sh(script: "node execute_query.js new_queries.txt", returnStatus: true)
                    if (executionResult != 0) {
                        error "❌ Query execution failed!"
                    }
                }
            }
        }
    }

    post {
        success {
            script {
                echo "✅ All queries executed successfully!"
                sh 'echo "Execution successful" >> $LOG_FILE'
                emailext(
                    subject: "✅ MongoDB Query Execution Successful",
                    body: "All queries executed successfully.\n\n$(cat $LOG_FILE)",
                    to: "team@example.com"
                )
            }
        }
        failure {
            script {
                echo "❌ Query execution failed! Rolling back..."
                sh 'node rollback_queries.js new_queries.txt >> $LOG_FILE'

                emailext(
                    subject: "❌ MongoDB Query Execution Failed",
                    body: "Error encountered. Rollback performed.\n\n$(cat $LOG_FILE)",
                    to: "team@example.com"
                )
            }
        }
    }
}